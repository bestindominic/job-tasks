---
- hosts: '{{ hostgroup }}'
  become: yes
  vars:
  - mysql_root_pass: "admin"
  vars_prompt:
  - name: "hostgroup"
    prompt: "Enter the hostgroup"
    private: false
    default: testhost

  tasks:

  - name: Install the python-mysqldb module before other tasks
    apt: name=python-mysqldb state=latest update_cache=yes

  - name: Set MySQL root password before installing
    debconf: name='mysql-server' question='mysql-server/root_password' value='{{mysql_root_pass | quote}}' vtype='password'

  - name: Confirm MySQL root password before installing
    debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{mysql_root_pass | quote}}' vtype='password'

  - name: install mysql-common mysql-client mysql-server
    apt: name={{ item }} state=latest update_cache=yes
    with_items:
    - mysql-common
    - mysql-client
    - mysql-server

  - name: stop mysql service
    service: name=mysql state=stopped

  - name: copy mysqld.cnf jinja template
    template: src=mysqld.cnf.j2 dest=/etc/mysql/mysql.conf.d/mysqld.cnf owner=root group=root mode=644 {{ server_id }}
    when: inventory_hostname == "mysql1"

  - name: copy mysqld.cnf jinja template
    template: src=mysqld.cnf.j2 dest=/etc/mysql/mysql.conf.d/mysqld.cnf owner=root group=root mode=644  {{ server_id }}
    when: inventory_hostname == "mysql2"

  - name: start mysql service
    service: name=mysql state=started

#  - name: check master1 status
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: getmaster
#    when: inventory_hostname == "master1"
#    register: replica_status_master_one
#
#  - debug: msg="{{ replica_status_master_one }}"
#
##  - name: set facts postion and file of master1
##    set_fact:
##      master_one_file: "{{ replica_status_master_one.File }}"
##      master_one_postion: "{{ replica_status_master_one.Position }}"
#
## - name: check master1 status
##   shell: mysql -h localhost -u root -padmin -e "show master status;"
##   register: testing
#
## - debug: msg="{{ testing }}"
#
#  - name: create replica user on master1 and master2
#    mysql_user:
#      login_user: root
#      login_password: admin
#      name: replicator
#      password: replication1234
#      priv: "*.*:REPLICATION SLAVE" 
#      state: present
#
#  - name: Stop slave on master2
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: stopslave
#    when: inventory_hostname == "master2"
#
#
#  - name: set master on master2
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: changemaster
#       master_user: replicator
#       master_password: replication1234
#       master_host: 52.203.237.56 
#       master_log_file: mysql-bin.000008
#       master_log_pos: 154
#    when: inventory_hostname == "master2"
#
#  - name: Start slave on master2
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: startslave
#    when: inventory_hostname == "master2"
#
#  - name: check master2 status
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: getmaster
#    when: inventory_hostname == "master2"
#    register: replica_status_master_two
#
#  - debug: msg="{{ replica_status_master_two }}"
#
##  - name: set facts postion and file of master2
##    set_fact:
##      master_two_file: "{{ replica_status_master_two.File }}"
##      master_two_postion: "{{ replica_status_master_two.Position }}"
# 
#  - name: Stop slave on master1
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: stopslave
#    when: inventory_hostname == "master1"
#
#  - name: set master on master1
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: changemaster
#       master_user: replicator
#       master_password: replication1234
#       master_host: 54.172.103.16
#       master_log_file: mysql-bin.000002
#       master_log_pos: 154
#    when: inventory_hostname == "master1"
#
#  - name: Start slave on master1
#    mysql_replication:
#       login_user: root
#       login_password: admin
#       mode: startslave
#    when: inventory_hostname == "master1"

